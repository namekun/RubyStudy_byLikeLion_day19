<h1 id = "title">Movies</h1>
<input type="text" class="form-control movie-title">
<div class="recomm-movie d-flex justify-content-start row">
    
  
</div>

<div id = "title" class ="row">
<% @movies.each do |movie| %>
<div class="card col-md-3">
  <img class="card-img-top" src="<%= movie.image_path.thumb_fit.url %>" alt="">
  <div class="card-body">
    <h5 class="card-title"><%= movie.title%></h5>
    <p class="card-text"><%= movie.genre %></p>
    <p class="card-text"><%= movie.director %></p>
    <p class="card-text"><%= movie.actor %></p>
    <%= link_to "영화 정보보기", movie_path(movie) , class: 'btn btn-primary'%>
  </div>
</div>
<% end %>
</div>
<hr>
<%=paginate @movies, theme: 'twitter-bootstrap-4' %>
<hr>
<br>

<%= link_to 'New Movie', new_movie_path %>

<hr>
<% if user_signed_in? %>
<!-- 로그인 된 상태 -->
<%= current_user.email %>
<%= link_to "로그아웃", destroy_user_session_path, method: "delete" %>
<% else %>
<!-- 로그 아웃 된 상태 -->
<%= link_to "로그인", new_user_session_path %>
<%end%>
<script>

  $(document).on('ready', function(){
    $('.movie-title').on('keyup', function(){
      $('.recomm-movie').html('');
      var title = $(this).val()
      $.ajax({
        url: 'movies/search_movie',
        data: {
          q: title
        }
      })
    })
  });
  // var btn = document.getElementsByClassName("btn")[0];
  // var count = 0;
  // var msg = "나 건드리지마!!";
  // btn.onmouseover= function(){ 
  //   count += 1; 
  //   if (count>3)
  //         { msg = "아 진짜 그만하라니까?";} 
  //     alert(msg);
  // }
    

  // var func1 = function(){ //선언 하고 나서 function을 사용할 수 있다.
  //   alert("하이욤!");
  //   //함수 표현식
  //   //선언되기 이전에 사용할 수 없다.
  // }

  // function func2() { // 선언하기전에 먼저 함수를 쓰고 그다음에 선언해도 사용가능하다.
  //   alert("하이하이욤!")
  //   //함수 선언식
  //   //선언되기 이전에도 사용할 수 있다.
    
  // }
  
  // var btn = document.getElementsByClassName("btn")[0];
  
  // btn.addEventListener("mouseover", func2);
  
  // var btn2 = document.getElementsByClassName("btn")[1];
  
  // btn2.onmouseover = func1;
  
  // 먼저 선언되어 있던 함수를 이벤트 핸들러로 사용할 경우
  // 함수 이름만 적어서 사용한다.
  // 함수이름() <- 이 형태는 함수의 실행을 의미한다.
  
  // 버튼 (요소)에 마우스를 오버(이벤트)했더니 (이벤트 리스너)
  // 그 위에 있던 글자(요소)들이 갑자기 이상한 글자로 변해버린다 (이벤트 핸들러)
/*  var count = 0;
  
  var title = document.getElementsByClassName("card-title")[0];
  console.dir(title);
  var default_text = title.innerText;
  
  var btn = document.getElementsByClassName("btn")[0]; //요소
  btn.addEventListener("mouseover", function(){
  if(count == 0){
    var title = document.getElementsByClassName("card-title")[0];
    console.dir(title);
    title.innerText = "Bie Mo Wo";
    count++;
  }
  // 함수를 선언하는 3번재 방법 : 익명함수  
  else{
    var title = document.getElementsByClassName("card-title")[0];
    console.dir(title);
    title.innerText = default_text;
    count--;
  }
  });*/
// innerHtml은 개발자 코드로 확인할 때, 코드 전체를 보여주고, innerText는 결과만 리턴


//마우스를 올렸을때, 버튼색상을 바꾸자(이벤트, 이벤트 리스너)
//해당 버튼의 class가 btn btn-danger 로 변경(이벤트 핸들러)

/*var title = document.getElementsByClassName("card-title")[0];
btn.addEventListener("mouseover", function(){
  btn.setAttribute("class", "btn btn-danger ");
})
*/

</script>
